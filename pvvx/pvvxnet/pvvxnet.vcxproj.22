<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="..\packages\Microsoft.Windows.WDK.x64.10.0.26100.4204\build\native\Microsoft.Windows.WDK.x64.props" Condition="Exists('..\packages\Microsoft.Windows.WDK.x64.10.0.26100.4204\build\native\Microsoft.Windows.WDK.x64.props')" />
  <Import Project="..\packages\Microsoft.Windows.SDK.CPP.x64.10.0.26100.4948\build\native\Microsoft.Windows.SDK.cpp.x64.props" Condition="Exists('..\packages\Microsoft.Windows.SDK.CPP.x64.10.0.26100.4948\build\native\Microsoft.Windows.SDK.cpp.x64.props')" />
  <Import Project="..\packages\Microsoft.Windows.SDK.CPP.10.0.26100.4948\build\native\Microsoft.Windows.SDK.cpp.props" Condition="Exists('..\packages\Microsoft.Windows.SDK.CPP.10.0.26100.4948\build\native\Microsoft.Windows.SDK.cpp.props')" />
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Win11Debug|x64">
      <Configuration>Win11Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Win11Release|x64">
      <Configuration>Win11Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="PropertySheets">
    <PlatformToolset>WindowsKernelModeDriver10.0</PlatformToolset>
    <ConfigurationType>Driver</ConfigurationType>
    <DriverType>WDM</DriverType>
    <TARGETNAME>pvvxnet</TARGETNAME>
    <Configuration Condition="'$(Configuration)' == ''">Debug</Configuration>
    <Platform Condition="'$(Platform)' == ''">Win32</Platform>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Label="PropertySheets">
    <ConversionToolVersion>1.0</ConversionToolVersion>
    <BUILD_ALT_DIR>$(Configuration.Replace(' ',''))</BUILD_ALT_DIR>
    <IntDir Condition="'$(Platform)'!='Win32'">$(BUILD_ALT_DIR)\$(Platform)\</IntDir>
    <OutDir>$(IntDir)</OutDir>
  </PropertyGroup>
  <ImportGroup Label="PreConfiguration">
    <Import Project="$(VCTargetsPath)\WDKConversion\PreConfiguration.props" />
  </ImportGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{1DDC3737-01E5-401D-931E-7CAAF1C5B095}</ProjectGuid>
    <RootNamespace>$(MSBuildProjectName)</RootNamespace>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Win11Debug|x64'" Label="Configuration">
    <TargetVersion>Windows10</TargetVersion>
    <UseDebugLibraries>True</UseDebugLibraries>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Win11Release|x64'" Label="Configuration">
    <TargetVersion>Windows10</TargetVersion>
    <UseDebugLibraries>False</UseDebugLibraries>
  </PropertyGroup>
  <!-- Needed by any VcxProj -->
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
    <Import Project="..\packages\Microsoft.Windows.SDK.CPP.10.0.26100.4948\build\native\Microsoft.Windows.SDK.cpp.targets" Condition="Exists('..\packages\Microsoft.Windows.SDK.CPP.10.0.26100.4948\build\native\Microsoft.Windows.SDK.cpp.targets')" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Win11Release|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Win11Debug|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <!-- The WrappedTaskItems label is used by the conversion tool to identify the location where items
        associated with wrapped tasks will reside.-->
  <ItemGroup Label="WrappedTaskItems">
    <ClInclude Include="mp_nif.h" />
    <ClInclude Include="pvvxnet_ver.h" />
  </ItemGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Win11Debug|x64'">
    <ResourceCompile>
      <PreprocessorDefinitions>TARGET_OS_Win11;ARCH_x86_64;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ResourceCompile>
    <ClCompile>
      <PreprocessorDefinitions>WIN10_TARGET_OS=2004;ARCH_x86_64;TARGET_OS_GE_Win8;NDIS_MINIPORT_DRIVER=1;NDIS_WDM=1;PVVXNET=1;PVVX;USE_INDIRECT_XENBUS_APIS;NDIS689_MINIPORT=1;MP_RSS_SUPPORTED=1;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <SupportJustMyCode>false</SupportJustMyCode>
    </ClCompile>
    <Link>
      <CETCompat>true</CETCompat>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Win11Release|x64'">
    <ResourceCompile>
      <PreprocessorDefinitions>TARGET_OS_Win11;ARCH_x86_64;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ResourceCompile>
    <ClCompile>
      <PreprocessorDefinitions>WIN10_TARGET_OS=2004;ARCH_x86_64;TARGET_OS_GE_Win8;NDIS_MINIPORT_DRIVER=1;NDIS_WDM=1;PVVXNET=1;PVVX;USE_INDIRECT_XENBUS_APIS;NDIS689_MINIPORT=1;MP_RSS_SUPPORTED=1;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
    <Link>
      <CETCompat>true</CETCompat>
    </Link>
  </ItemDefinitionGroup>
  <ItemGroup>
    <!-- We only add items (e.g. form ClSourceFiles) that do not already exist (e.g in the ClCompile list), this avoids duplication -->
    <ClCompile Include="@(ClSourceFiles)" Exclude="@(ClCompile)" />
    <ResourceCompile Include="@(RcSourceFiles)" Exclude="@(ResourceCompile)" />
    <Midl Include="@(IdlSourceFiles)" Exclude="@(Midl)" />
    <MessageCompile Include="@(McSourceFiles)" Exclude="@(MessageCompile)" />
    <MASM Include="@(AsmSourceFiles)" Exclude="@(MASM)" />
    <GenerateBmf Include="@(MofSourceFiles)" Exclude="@(GenerateBmf)" />
  </ItemGroup>
  <!-- Set default environment variables, e.g. for stampinf -->
  <ItemGroup>
    <BuildMacro Include="SDK_INC_PATH">
      <Value>$(KIT_SHARED_INC_PATH)</Value>
      <EnvironmentVariable>true</EnvironmentVariable>
    </BuildMacro>
  </ItemGroup>
  <ItemGroup>
    <Inf Exclude="@(Inf)" Include="$(DDK_INF_FILES)" />
    <Inf Exclude="@(Inf)" Include="*.inf" />
    <FilesToPackage Include="$(TargetPath)" Condition="'$(ConfigurationType)'=='Driver' or '$(ConfigurationType)'=='DynamicLibrary'" />
    <FilesToPackage Include="$(DDK_PACKAGE_FILES)" />
    <FilesToPackage Include="@(Inf->'%(CopyOutput)')" Condition="'@(Inf)'!=''" />
  </ItemGroup>
  <!-- Necessary to pick up proper files from local directory when in the IDE-->
  <ItemGroup>
    <None Exclude="@(None)" Include="*.txt;*.htm;*.html" />
    <None Exclude="@(None)" Include="*.ico;*.cur;*.bmp;*.dlg;*.rct;*.gif;*.jpg;*.jpeg;*.wav;*.jpe;*.tiff;*.tif;*.png;*.rc2" />
    <None Exclude="@(None)" Include="*.def;*.bat;*.hpj;*.asmx" />
    <None Include="packages.config" />
  </ItemGroup>
  <!-- /Necessary to pick up proper files from local directory when in the IDE-->
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('..\packages\Microsoft.Windows.SDK.CPP.10.0.26100.4948\build\native\Microsoft.Windows.SDK.cpp.props')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\Microsoft.Windows.SDK.CPP.10.0.26100.4948\build\native\Microsoft.Windows.SDK.cpp.props'))" />
    <Error Condition="!Exists('..\packages\Microsoft.Windows.SDK.CPP.10.0.26100.4948\build\native\Microsoft.Windows.SDK.cpp.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\Microsoft.Windows.SDK.CPP.10.0.26100.4948\build\native\Microsoft.Windows.SDK.cpp.targets'))" />
    <Error Condition="!Exists('..\packages\Microsoft.Windows.SDK.CPP.x64.10.0.26100.4948\build\native\Microsoft.Windows.SDK.cpp.x64.props')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\Microsoft.Windows.SDK.CPP.x64.10.0.26100.4948\build\native\Microsoft.Windows.SDK.cpp.x64.props'))" />
    <Error Condition="!Exists('..\packages\Microsoft.Windows.WDK.x64.10.0.26100.4204\build\native\Microsoft.Windows.WDK.x64.props')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\Microsoft.Windows.WDK.x64.10.0.26100.4204\build\native\Microsoft.Windows.WDK.x64.props'))" />
  </Target>
</Project>
